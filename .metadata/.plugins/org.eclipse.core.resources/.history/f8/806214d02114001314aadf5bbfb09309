/**
 * Write a program in Node.js that will remove the lowest homework score for each student. 
 * Since there is a single document for each student containing an array of scores, you will 
 * need to update the scores array and remove the homework.
 * 
 * Hint: One way to solve this is to find the lowest homework in code and then update the 
 * scores array with the low homework removed. If you are struggling with the Node.js side of this, 
 * look at the Array.splice method, which can remove elements from a Javascript Array. 
 * Note that you should not use the delete operator, because it will delete the element without 
 * resizing the array, leaving an empty space.
 */

// Connect to MongoDB
var mongoClient = require("MongoDB").MongoClient;

mongoClient.connect("mongodb://localhost:27017/school", function(err, db){
	if (err) throw err;
	var students = db.collection("students");
	// Retrieve all records with at least one HOMEWORK (scores.type) score.
	// This works efficiently if the ensureIndex command was run ahead of time on the collection
	// like this:
	// db.students.ensureIndex({type : 1})
	var query = {"scores.type" : "homework"};
	var cursor = students.find(query);
	var currScore = 0;
	var scores = null;
	var firstTime = true;
	cursor.each(function(err, doc){
		if(err) throw err;
		if(doc === null){
			return db.close();
		}
		scores = doc.scores;
		for(var i=0; i< scores.length; i++){
			var scoreItem = scores[i];
			if(scoreItem.type == "homework"){
				if(firstTime === true){
					currScore = scoreItem.score;
					firstTime = false;
				}
				else{
					if(scoreItem.score >= currScore){
						scores.splice(i,1);
					}
					else{
						currScore = scoreItem.score;
					}
				}
			}
		}
		// Update the doc with the modified scores array
		var updateFilter = {"_id" : doc._id};
		var sort = [];
		var operator = {$set : {"scores" : scores}};
//		var operator = {$set : {"name" : "aimee Zank"}};
		var options = {"new" : true}; // Return the updated document
		students.findAndModify(updateFilter, sort, operator, options, function(err, updatedDoc){
			if(err) throw err;
			console.dir("Updated?");
		});
		firstTime = true;
	});
});

